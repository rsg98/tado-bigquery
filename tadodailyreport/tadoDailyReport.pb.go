// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: tadoDailyReport.proto

package tadodailyreport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Tadodailyreport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId       *int64                          `protobuf:"varint,1,req,name=zone_id,json=zoneId" json:"zone_id,omitempty"`
	ZoneName     *string                         `protobuf:"bytes,2,req,name=zone_name,json=zoneName" json:"zone_name,omitempty"`
	Interval     *Tadodailyreport_Interval       `protobuf:"bytes,3,req,name=interval" json:"interval,omitempty"`
	Settings     []*Tadodailyreport_Settings     `protobuf:"bytes,4,rep,name=settings" json:"settings,omitempty"`
	MeasuredData []*Tadodailyreport_Measureddata `protobuf:"bytes,5,rep,name=measured_data,json=measuredData" json:"measured_data,omitempty"`
	CallForHeat  []*Tadodailyreport_Callforheat  `protobuf:"bytes,6,rep,name=call_for_heat,json=callForHeat" json:"call_for_heat,omitempty"`
	Weather      []*Tadodailyreport_Weather      `protobuf:"bytes,7,rep,name=weather" json:"weather,omitempty"`
}

func (x *Tadodailyreport) Reset() {
	*x = Tadodailyreport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport) ProtoMessage() {}

func (x *Tadodailyreport) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport.ProtoReflect.Descriptor instead.
func (*Tadodailyreport) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0}
}

func (x *Tadodailyreport) GetZoneId() int64 {
	if x != nil && x.ZoneId != nil {
		return *x.ZoneId
	}
	return 0
}

func (x *Tadodailyreport) GetZoneName() string {
	if x != nil && x.ZoneName != nil {
		return *x.ZoneName
	}
	return ""
}

func (x *Tadodailyreport) GetInterval() *Tadodailyreport_Interval {
	if x != nil {
		return x.Interval
	}
	return nil
}

func (x *Tadodailyreport) GetSettings() []*Tadodailyreport_Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *Tadodailyreport) GetMeasuredData() []*Tadodailyreport_Measureddata {
	if x != nil {
		return x.MeasuredData
	}
	return nil
}

func (x *Tadodailyreport) GetCallForHeat() []*Tadodailyreport_Callforheat {
	if x != nil {
		return x.CallForHeat
	}
	return nil
}

func (x *Tadodailyreport) GetWeather() []*Tadodailyreport_Weather {
	if x != nil {
		return x.Weather
	}
	return nil
}

type Tadodailyreport_Interval struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From *int64 `protobuf:"varint,1,req,name=from" json:"from,omitempty"`
	To   *int64 `protobuf:"varint,2,req,name=to" json:"to,omitempty"`
}

func (x *Tadodailyreport_Interval) Reset() {
	*x = Tadodailyreport_Interval{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Interval) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Interval) ProtoMessage() {}

func (x *Tadodailyreport_Interval) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Interval.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Interval) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Tadodailyreport_Interval) GetFrom() int64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *Tadodailyreport_Interval) GetTo() int64 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

type Tadodailyreport_Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        *int64   `protobuf:"varint,1,req,name=from" json:"from,omitempty"`
	To          *int64   `protobuf:"varint,2,req,name=to" json:"to,omitempty"`
	Temperature *float32 `protobuf:"fixed32,3,req,name=temperature" json:"temperature,omitempty"`
}

func (x *Tadodailyreport_Settings) Reset() {
	*x = Tadodailyreport_Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Settings) ProtoMessage() {}

func (x *Tadodailyreport_Settings) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Settings.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Settings) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Tadodailyreport_Settings) GetFrom() int64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *Tadodailyreport_Settings) GetTo() int64 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

func (x *Tadodailyreport_Settings) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

type Tadodailyreport_Measureddata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InsideTemperature []*Tadodailyreport_Measureddata_Insidetemperature `protobuf:"bytes,1,rep,name=inside_temperature,json=insideTemperature" json:"inside_temperature,omitempty"`
	Humidity          []*Tadodailyreport_Measureddata_Humidity          `protobuf:"bytes,2,rep,name=humidity" json:"humidity,omitempty"`
}

func (x *Tadodailyreport_Measureddata) Reset() {
	*x = Tadodailyreport_Measureddata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Measureddata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Measureddata) ProtoMessage() {}

func (x *Tadodailyreport_Measureddata) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Measureddata.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Measureddata) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Tadodailyreport_Measureddata) GetInsideTemperature() []*Tadodailyreport_Measureddata_Insidetemperature {
	if x != nil {
		return x.InsideTemperature
	}
	return nil
}

func (x *Tadodailyreport_Measureddata) GetHumidity() []*Tadodailyreport_Measureddata_Humidity {
	if x != nil {
		return x.Humidity
	}
	return nil
}

type Tadodailyreport_Callforheat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     *int64  `protobuf:"varint,1,req,name=from" json:"from,omitempty"`
	To       *int64  `protobuf:"varint,2,req,name=to" json:"to,omitempty"`
	HeatRate *string `protobuf:"bytes,3,req,name=heat_rate,json=heatRate" json:"heat_rate,omitempty"`
}

func (x *Tadodailyreport_Callforheat) Reset() {
	*x = Tadodailyreport_Callforheat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Callforheat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Callforheat) ProtoMessage() {}

func (x *Tadodailyreport_Callforheat) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Callforheat.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Callforheat) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Tadodailyreport_Callforheat) GetFrom() int64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *Tadodailyreport_Callforheat) GetTo() int64 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

func (x *Tadodailyreport_Callforheat) GetHeatRate() string {
	if x != nil && x.HeatRate != nil {
		return *x.HeatRate
	}
	return ""
}

type Tadodailyreport_Weather struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        *int64   `protobuf:"varint,1,req,name=from" json:"from,omitempty"`
	To          *int64   `protobuf:"varint,2,req,name=to" json:"to,omitempty"`
	State       *string  `protobuf:"bytes,3,req,name=state" json:"state,omitempty"`
	Temperature *float32 `protobuf:"fixed32,4,req,name=temperature" json:"temperature,omitempty"`
}

func (x *Tadodailyreport_Weather) Reset() {
	*x = Tadodailyreport_Weather{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Weather) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Weather) ProtoMessage() {}

func (x *Tadodailyreport_Weather) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Weather.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Weather) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Tadodailyreport_Weather) GetFrom() int64 {
	if x != nil && x.From != nil {
		return *x.From
	}
	return 0
}

func (x *Tadodailyreport_Weather) GetTo() int64 {
	if x != nil && x.To != nil {
		return *x.To
	}
	return 0
}

func (x *Tadodailyreport_Weather) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Tadodailyreport_Weather) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

type Tadodailyreport_Measureddata_Insidetemperature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *int64   `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	Temperature *float32 `protobuf:"fixed32,2,req,name=temperature" json:"temperature,omitempty"`
}

func (x *Tadodailyreport_Measureddata_Insidetemperature) Reset() {
	*x = Tadodailyreport_Measureddata_Insidetemperature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Measureddata_Insidetemperature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Measureddata_Insidetemperature) ProtoMessage() {}

func (x *Tadodailyreport_Measureddata_Insidetemperature) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Measureddata_Insidetemperature.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Measureddata_Insidetemperature) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *Tadodailyreport_Measureddata_Insidetemperature) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Tadodailyreport_Measureddata_Insidetemperature) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

type Tadodailyreport_Measureddata_Humidity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *int64   `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"`
	Humidity  *float32 `protobuf:"fixed32,2,req,name=humidity" json:"humidity,omitempty"`
}

func (x *Tadodailyreport_Measureddata_Humidity) Reset() {
	*x = Tadodailyreport_Measureddata_Humidity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tadoDailyReport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tadodailyreport_Measureddata_Humidity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tadodailyreport_Measureddata_Humidity) ProtoMessage() {}

func (x *Tadodailyreport_Measureddata_Humidity) ProtoReflect() protoreflect.Message {
	mi := &file_tadoDailyReport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tadodailyreport_Measureddata_Humidity.ProtoReflect.Descriptor instead.
func (*Tadodailyreport_Measureddata_Humidity) Descriptor() ([]byte, []int) {
	return file_tadoDailyReport_proto_rawDescGZIP(), []int{0, 2, 1}
}

func (x *Tadodailyreport_Measureddata_Humidity) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *Tadodailyreport_Measureddata_Humidity) GetHumidity() float32 {
	if x != nil && x.Humidity != nil {
		return *x.Humidity
	}
	return 0
}

var File_tadoDailyReport_proto protoreflect.FileDescriptor

var file_tadoDailyReport_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x61, 0x64, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x9b, 0x08,
	0x0a, 0x0f, 0x54, 0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x7a, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x7a,
	0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x54, 0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61, 0x64,
	0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x47, 0x0a, 0x0d, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61,
	0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6d, 0x65, 0x61, 0x73,
	0x75, 0x72, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0d, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x68, 0x65, 0x61, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x68, 0x65,
	0x61, 0x74, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x48, 0x65, 0x61, 0x74, 0x12,
	0x37, 0x0a, 0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c,
	0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x52,
	0x07, 0x77, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x1a, 0x2e, 0x0a, 0x08, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x1a, 0x50, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0b, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0xd7, 0x02, 0x0a, 0x0c, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x64, 0x61, 0x74, 0x61, 0x12, 0x63, 0x0a, 0x12, 0x69,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x64, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x49, 0x6e, 0x73, 0x69,
	0x64, 0x65, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x11, 0x69,
	0x6e, 0x73, 0x69, 0x64, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x47, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x61, 0x64, 0x6f, 0x64, 0x61,
	0x69, 0x6c, 0x79, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x64, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x68, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x1a, 0x53, 0x0a, 0x11, 0x49, 0x6e, 0x73,
	0x69, 0x64, 0x65, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x44,
	0x0a, 0x08, 0x48, 0x75, 0x6d, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x75, 0x6d, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x02, 0x28, 0x02, 0x52, 0x08, 0x68, 0x75, 0x6d, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x1a, 0x4e, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x66, 0x6f, 0x72, 0x68,
	0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x68, 0x65, 0x61, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x1a, 0x65, 0x0a, 0x07, 0x57, 0x65, 0x61, 0x74, 0x68, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x03, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x02, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x73, 0x67, 0x39, 0x38, 0x2f,
	0x74, 0x61, 0x64, 0x6f, 0x2d, 0x62, 0x69, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x61, 0x64, 0x6f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74,
}

var (
	file_tadoDailyReport_proto_rawDescOnce sync.Once
	file_tadoDailyReport_proto_rawDescData = file_tadoDailyReport_proto_rawDesc
)

func file_tadoDailyReport_proto_rawDescGZIP() []byte {
	file_tadoDailyReport_proto_rawDescOnce.Do(func() {
		file_tadoDailyReport_proto_rawDescData = protoimpl.X.CompressGZIP(file_tadoDailyReport_proto_rawDescData)
	})
	return file_tadoDailyReport_proto_rawDescData
}

var file_tadoDailyReport_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tadoDailyReport_proto_goTypes = []interface{}{
	(*Tadodailyreport)(nil),                                // 0: main.Tadodailyreport
	(*Tadodailyreport_Interval)(nil),                       // 1: main.Tadodailyreport.Interval
	(*Tadodailyreport_Settings)(nil),                       // 2: main.Tadodailyreport.Settings
	(*Tadodailyreport_Measureddata)(nil),                   // 3: main.Tadodailyreport.Measureddata
	(*Tadodailyreport_Callforheat)(nil),                    // 4: main.Tadodailyreport.Callforheat
	(*Tadodailyreport_Weather)(nil),                        // 5: main.Tadodailyreport.Weather
	(*Tadodailyreport_Measureddata_Insidetemperature)(nil), // 6: main.Tadodailyreport.Measureddata.Insidetemperature
	(*Tadodailyreport_Measureddata_Humidity)(nil),          // 7: main.Tadodailyreport.Measureddata.Humidity
}
var file_tadoDailyReport_proto_depIdxs = []int32{
	1, // 0: main.Tadodailyreport.interval:type_name -> main.Tadodailyreport.Interval
	2, // 1: main.Tadodailyreport.settings:type_name -> main.Tadodailyreport.Settings
	3, // 2: main.Tadodailyreport.measured_data:type_name -> main.Tadodailyreport.Measureddata
	4, // 3: main.Tadodailyreport.call_for_heat:type_name -> main.Tadodailyreport.Callforheat
	5, // 4: main.Tadodailyreport.weather:type_name -> main.Tadodailyreport.Weather
	6, // 5: main.Tadodailyreport.Measureddata.inside_temperature:type_name -> main.Tadodailyreport.Measureddata.Insidetemperature
	7, // 6: main.Tadodailyreport.Measureddata.humidity:type_name -> main.Tadodailyreport.Measureddata.Humidity
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_tadoDailyReport_proto_init() }
func file_tadoDailyReport_proto_init() {
	if File_tadoDailyReport_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tadoDailyReport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Interval); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Measureddata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Callforheat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Weather); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Measureddata_Insidetemperature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tadoDailyReport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tadodailyreport_Measureddata_Humidity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tadoDailyReport_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tadoDailyReport_proto_goTypes,
		DependencyIndexes: file_tadoDailyReport_proto_depIdxs,
		MessageInfos:      file_tadoDailyReport_proto_msgTypes,
	}.Build()
	File_tadoDailyReport_proto = out.File
	file_tadoDailyReport_proto_rawDesc = nil
	file_tadoDailyReport_proto_goTypes = nil
	file_tadoDailyReport_proto_depIdxs = nil
}
